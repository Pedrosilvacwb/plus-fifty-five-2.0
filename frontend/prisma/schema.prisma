generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id                                                Int                          @id @default(autoincrement())
  quantity                                          Int?
  is_active                                         Boolean?
  created_at                                        DateTime?                    @db.Timestamp(6)
  updated_at                                        DateTime?                    @db.Timestamp(6)
  published_at                                      DateTime?                    @db.Timestamp(6)
  created_by_id                                     Int?
  updated_by_id                                     Int?
  cart_items_cart_links                             cart_items_cart_links[]
  cart_items_product_links                          cart_items_product_links[]
  cart_items_user_id_links                          cart_items_user_id_links[]
  cart_items_variation_links                        cart_items_variation_links[]

}

model cart_items_cart_links {
  id              Int         @id @default(autoincrement())
  cart_item_id    Int?
  cart_id         Int?
  cart_item_order Float?
  cart_items      cart_items? @relation(fields: [cart_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  carts           carts?      @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

}

model cart_items_product_links {
  id           Int         @id @default(autoincrement())
  cart_item_id Int?
  product_id   Int?
  cart_items   cart_items? @relation(fields: [cart_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products     products?   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

}

model carts {
  id                                           Int                     @id @default(autoincrement())
  cart_id                                      String?                 @db.VarChar(255)
  created_at                                   DateTime?               @db.Timestamp(6)
  updated_at                                   DateTime?               @db.Timestamp(6)
  published_at                                 DateTime?               @db.Timestamp(6)
  created_by_id                                Int?
  updated_by_id                                Int?
  cart_items_cart_links                        cart_items_cart_links[]

}

model products {
  id                                              Int                         @id @default(autoincrement())
  name                                            String?                     @db.VarChar(255)
  description                                     String?
  price                                           Decimal?                    @db.Decimal(10, 2)
  stock                                           Int?
  is_available                                    Boolean?
  created_at                                      DateTime?                   @db.Timestamp(6)
  updated_at                                      DateTime?                   @db.Timestamp(6)
  published_at                                    DateTime?                   @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  cart_items_product_links                        cart_items_product_links[]
  
  products_sizes_links                            products_sizes_links[]
  products_variations_links                       products_variations_links[]

}

model products_sizes_links {
  id            Int       @id @default(autoincrement())
  product_id    Int?
  size_id       Int?
  size_order    Float?
  product_order Float?
  products      products? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sizes         sizes?    @relation(fields: [size_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

}

model products_variations_links {
  id              Int         @id @default(autoincrement())
  product_id      Int?
  variation_id    Int?
  variation_order Float?
  products        products?   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variations      variations? @relation(fields: [variation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sizes {
  id                                           Int                    @id @default(autoincrement())
  name                                         String?                @db.VarChar(255)
  value                                        String?                @db.VarChar(255)
  is_active                                    Boolean?
  created_at                                   DateTime?              @db.Timestamp(6)
  updated_at                                   DateTime?              @db.Timestamp(6)
  published_at                                 DateTime?              @db.Timestamp(6)
  created_by_id                                Int?
  updated_by_id                                Int?
  products_sizes_links                         products_sizes_links[]
  
}

model variations {
  id                                                Int                          @id @default(autoincrement())
  variation_category                                String?                      @db.VarChar(255)
  variation_value                                   String?                      @db.VarChar(255)
  is_active                                         Boolean?
  created_at                                        DateTime?                    @db.Timestamp(6)
  updated_at                                        DateTime?                    @db.Timestamp(6)
  published_at                                      DateTime?                    @db.Timestamp(6)
  created_by_id                                     Int?
  updated_by_id                                     Int?
  cart_items_variation_links                        cart_items_variation_links[]
  products_variations_links                         products_variations_links[]
  
}

model cart_items_variation_links {
  id           Int         @id @default(autoincrement())
  cart_item_id Int?
  variation_id Int?
  cart_items   cart_items? @relation(fields: [cart_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variations   variations? @relation(fields: [variation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model up_users {
  id                                              Int                        @id @default(autoincrement())
  username                                        String?                    @db.VarChar(255)
  email                                           String?                    @db.VarChar(255)
  provider                                        String?                    @db.VarChar(255)
  password                                        String?                    @db.VarChar(255)
  reset_password_token                            String?                    @db.VarChar(255)
  confirmation_token                              String?                    @db.VarChar(255)
  confirmed                                       Boolean?
  blocked                                         Boolean?
  created_at                                      DateTime?                  @db.Timestamp(6)
  updated_at                                      DateTime?                  @db.Timestamp(6)
  created_by_id                                   Int?
  updated_by_id                                   Int?
  cart_items_user_id_links                        cart_items_user_id_links[]
  
}


model cart_items_user_id_links {
  id              Int         @id @default(autoincrement())
  cart_item_id    Int?
  user_id         Int?
  cart_item_order Float?
  cart_items      cart_items? @relation(fields: [cart_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  up_users        up_users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

}

